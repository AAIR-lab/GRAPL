non-fluents nf_wildfire_2_inst_mdp__9 {
	domain = wildfire_2_mdp;
	objects {
        location : {l11,l12,l13,l14,l21,l22,l23,l24,l31,l32,l33,l34,l41,l42,l43,l44,l51,l52,l53,l54,l61,l62,l63,l64,l71,l72,l73,l74,l81,l82,l83,l84,l91,l92,l93,l94};
	};
	non-fluents {
		NEIGHBOR(l11,l12);
		NEIGHBOR(l11,l21);
		NEIGHBOR(l11,l22);
		NEIGHBOR(l12,l11);
		NEIGHBOR(l12,l13);
		NEIGHBOR(l12,l21);
		NEIGHBOR(l12,l22);
		NEIGHBOR(l12,l23);
		NEIGHBOR(l13,l12);
		NEIGHBOR(l13,l14);
		NEIGHBOR(l13,l22);
		NEIGHBOR(l13,l23);
		NEIGHBOR(l13,l24);
		NEIGHBOR(l14,l13);
		NEIGHBOR(l14,l23);
		NEIGHBOR(l14,l24);
		NEIGHBOR(l21,l11);
		NEIGHBOR(l21,l12);
		NEIGHBOR(l21,l22);
		NEIGHBOR(l21,l31);
		NEIGHBOR(l21,l32);
		NEIGHBOR(l22,l11);
		NEIGHBOR(l22,l12);
		NEIGHBOR(l22,l13);
		NEIGHBOR(l22,l21);
		NEIGHBOR(l22,l23);
		NEIGHBOR(l22,l31);
		NEIGHBOR(l22,l32);
		NEIGHBOR(l22,l33);
		NEIGHBOR(l23,l12);
		NEIGHBOR(l23,l13);
		NEIGHBOR(l23,l14);
		NEIGHBOR(l23,l22);
		NEIGHBOR(l23,l24);
		// Omitted: NEIGHBOR(l23,l32);
		NEIGHBOR(l23,l33);
		NEIGHBOR(l23,l34);
		NEIGHBOR(l24,l13);
		NEIGHBOR(l24,l14);
		NEIGHBOR(l24,l23);
		NEIGHBOR(l24,l33);
		NEIGHBOR(l24,l34);
		NEIGHBOR(l31,l21);
		NEIGHBOR(l31,l22);
		NEIGHBOR(l31,l32);
		NEIGHBOR(l31,l41);
		NEIGHBOR(l31,l42);
		NEIGHBOR(l32,l21);
		NEIGHBOR(l32,l22);
		NEIGHBOR(l32,l23);
		NEIGHBOR(l32,l31);
		NEIGHBOR(l32,l33);
		NEIGHBOR(l32,l41);
		NEIGHBOR(l32,l42);
		NEIGHBOR(l32,l43);
		NEIGHBOR(l33,l22);
		NEIGHBOR(l33,l23);
		NEIGHBOR(l33,l24);
		NEIGHBOR(l33,l32);
		NEIGHBOR(l33,l34);
		NEIGHBOR(l33,l42);
		NEIGHBOR(l33,l43);
		// Omitted: NEIGHBOR(l33,l44);
		NEIGHBOR(l34,l23);
		NEIGHBOR(l34,l24);
		NEIGHBOR(l34,l33);
		NEIGHBOR(l34,l43);
		NEIGHBOR(l34,l44);
		NEIGHBOR(l41,l31);
		NEIGHBOR(l41,l32);
		// Omitted: NEIGHBOR(l41,l42);
		NEIGHBOR(l41,l51);
		NEIGHBOR(l41,l52);
		NEIGHBOR(l42,l31);
		NEIGHBOR(l42,l32);
		NEIGHBOR(l42,l33);
		NEIGHBOR(l42,l41);
		NEIGHBOR(l42,l43);
		NEIGHBOR(l42,l51);
		NEIGHBOR(l42,l52);
		NEIGHBOR(l42,l53);
		NEIGHBOR(l43,l32);
		NEIGHBOR(l43,l33);
		NEIGHBOR(l43,l34);
		NEIGHBOR(l43,l42);
		NEIGHBOR(l43,l44);
		NEIGHBOR(l43,l52);
		NEIGHBOR(l43,l53);
		NEIGHBOR(l43,l54);
		NEIGHBOR(l44,l33);
		NEIGHBOR(l44,l34);
		NEIGHBOR(l44,l43);
		NEIGHBOR(l44,l53);
		NEIGHBOR(l44,l54);
		NEIGHBOR(l51,l41);
		NEIGHBOR(l51,l42);
		NEIGHBOR(l51,l52);
		NEIGHBOR(l51,l61);
		NEIGHBOR(l51,l62);
		NEIGHBOR(l52,l41);
		NEIGHBOR(l52,l42);
		NEIGHBOR(l52,l43);
		NEIGHBOR(l52,l51);
		// Omitted: NEIGHBOR(l52,l53);
		NEIGHBOR(l52,l61);
		NEIGHBOR(l52,l62);
		NEIGHBOR(l52,l63);
		NEIGHBOR(l53,l42);
		NEIGHBOR(l53,l43);
		NEIGHBOR(l53,l44);
		NEIGHBOR(l53,l52);
		NEIGHBOR(l53,l54);
		NEIGHBOR(l53,l62);
		// Omitted: NEIGHBOR(l53,l63);
		NEIGHBOR(l53,l64);
		NEIGHBOR(l54,l43);
		NEIGHBOR(l54,l44);
		NEIGHBOR(l54,l53);
		NEIGHBOR(l54,l63);
		NEIGHBOR(l54,l64);
		NEIGHBOR(l61,l51);
		NEIGHBOR(l61,l52);
		NEIGHBOR(l61,l62);
		NEIGHBOR(l61,l71);
		NEIGHBOR(l61,l72);
		NEIGHBOR(l62,l51);
		NEIGHBOR(l62,l52);
		NEIGHBOR(l62,l53);
		NEIGHBOR(l62,l61);
		NEIGHBOR(l62,l63);
		NEIGHBOR(l62,l71);
		NEIGHBOR(l62,l72);
		NEIGHBOR(l62,l73);
		NEIGHBOR(l63,l52);
		NEIGHBOR(l63,l53);
		NEIGHBOR(l63,l54);
		NEIGHBOR(l63,l62);
		NEIGHBOR(l63,l64);
		NEIGHBOR(l63,l72);
		NEIGHBOR(l63,l73);
		NEIGHBOR(l63,l74);
		NEIGHBOR(l64,l53);
		NEIGHBOR(l64,l54);
		// Omitted: NEIGHBOR(l64,l63);
		NEIGHBOR(l64,l73);
		NEIGHBOR(l64,l74);
		NEIGHBOR(l71,l61);
		// Omitted: NEIGHBOR(l71,l62);
		NEIGHBOR(l71,l72);
		NEIGHBOR(l71,l81);
		NEIGHBOR(l71,l82);
		NEIGHBOR(l72,l61);
		NEIGHBOR(l72,l62);
		NEIGHBOR(l72,l63);
		NEIGHBOR(l72,l71);
		NEIGHBOR(l72,l73);
		// Omitted: NEIGHBOR(l72,l81);
		NEIGHBOR(l72,l82);
		NEIGHBOR(l72,l83);
		NEIGHBOR(l73,l62);
		NEIGHBOR(l73,l63);
		// Omitted: NEIGHBOR(l73,l64);
		NEIGHBOR(l73,l72);
		NEIGHBOR(l73,l74);
		NEIGHBOR(l73,l82);
		NEIGHBOR(l73,l83);
		NEIGHBOR(l73,l84);
		NEIGHBOR(l74,l63);
		NEIGHBOR(l74,l64);
		NEIGHBOR(l74,l73);
		NEIGHBOR(l74,l83);
		NEIGHBOR(l74,l84);
		NEIGHBOR(l81,l71);
		NEIGHBOR(l81,l72);
		NEIGHBOR(l81,l82);
		NEIGHBOR(l81,l91);
		NEIGHBOR(l81,l92);
		NEIGHBOR(l82,l71);
		NEIGHBOR(l82,l72);
		NEIGHBOR(l82,l73);
		NEIGHBOR(l82,l81);
		NEIGHBOR(l82,l83);
		NEIGHBOR(l82,l91);
		NEIGHBOR(l82,l92);
		NEIGHBOR(l82,l93);
		NEIGHBOR(l83,l72);
		NEIGHBOR(l83,l73);
		NEIGHBOR(l83,l74);
		// Omitted: NEIGHBOR(l83,l82);
		NEIGHBOR(l83,l84);
		NEIGHBOR(l83,l92);
		NEIGHBOR(l83,l93);
		NEIGHBOR(l83,l94);
		NEIGHBOR(l84,l73);
		NEIGHBOR(l84,l74);
		NEIGHBOR(l84,l83);
		NEIGHBOR(l84,l93);
		NEIGHBOR(l84,l94);
		NEIGHBOR(l91,l81);
		NEIGHBOR(l91,l82);
		// Omitted: NEIGHBOR(l91,l92);
		NEIGHBOR(l92,l81);
		NEIGHBOR(l92,l82);
		NEIGHBOR(l92,l83);
		NEIGHBOR(l92,l91);
		NEIGHBOR(l92,l93);
		NEIGHBOR(l93,l82);
		// Omitted: NEIGHBOR(l93,l83);
		NEIGHBOR(l93,l84);
		NEIGHBOR(l93,l92);
		NEIGHBOR(l93,l94);
		NEIGHBOR(l94,l83);
		NEIGHBOR(l94,l84);
		NEIGHBOR(l94,l93);
	};
}

instance wildfire_2_inst_mdp__9 {
	domain = wildfire_2_mdp;
	non-fluents = nf_wildfire_2_inst_mdp__9;
	init-state {
		burning(l23);
		burning(l24);
		burning(l42);
		burning(l53);
		burning(l61);
		burning(l64);
	};

	max-nondef-actions = 1;
	horizon  = 40;
	discount = 1.0;
}
