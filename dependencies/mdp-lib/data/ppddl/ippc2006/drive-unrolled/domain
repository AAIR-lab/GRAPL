(define (domain drive-unrolled)
  (:requirements :typing :probabilistic-effects :conditional-effects :equality)
  (:types coord direction color delay preference length rotation)
  (:predicates
    (heading ?d - direction)
    (clockwise ?d1 ?d2 - direction)
    (at ?x - coord ?y - coord)
    (nextx ?a - coord ?b - coord ?h - direction)
    (nexty ?a - coord ?b - coord ?h - direction)
    (light_color ?c - color)
    (light_delay ?x ?y - coord ?d - delay)
    (light_preference ?x ?y - coord ?p - preference)
    (road-length ?start-x ?start-y ?end-x ?end-y - coord ?l - length)
    (alive)
  )
  (:constants
    left right straight - rotation
    north south east west - direction
    green red unknown - color
    quick normal slow - delay
    north_south none east_west - preference
    short medium long - length
  )
  (:action look_at_light_north
    :parameters (?x - coord ?y - coord)
    :precondition (and (light_color unknown) (at ?x ?y) (heading north))
    :effect
      (and (probabilistic
             9/10 (when (light_preference ?x ?y north_south)
                    (and (not (light_color unknown)) (light_color green)))
             1/10 (when (light_preference ?x ?y north_south)
                    (and (not (light_color unknown)) (light_color red))))
           (probabilistic
             1/10 (when (light_preference ?x ?y east_west)
                    (and (not (light_color unknown)) (light_color green)))
             9/10 (when (light_preference ?x ?y east_west)
                    (and (not (light_color unknown)) (light_color red)))))
  )
  (:action look_at_light_south
    :parameters (?x - coord ?y - coord)
    :precondition (and (light_color unknown) (at ?x ?y) (heading south))
    :effect
      (and (probabilistic
             9/10 (when (light_preference ?x ?y north_south)
                    (and (not (light_color unknown)) (light_color green)))
             1/10 (when (light_preference ?x ?y north_south)
                    (and (not (light_color unknown)) (light_color red))))
           (probabilistic
             1/10 (when (light_preference ?x ?y east_west)
                    (and (not (light_color unknown)) (light_color green)))
             9/10 (when (light_preference ?x ?y east_west)
                    (and (not (light_color unknown)) (light_color red)))))
  )
  (:action look_at_light_east
    :parameters (?x - coord ?y - coord)
    :precondition (and (light_color unknown) (at ?x ?y) (heading east))
    :effect
      (and (probabilistic
             1/10 (when (light_preference ?x ?y north_south)
                    (and (not (light_color unknown)) (light_color green)))
             9/10 (when (light_preference ?x ?y north_south)
                    (and (not (light_color unknown)) (light_color red))))
           (probabilistic
             9/10 (when (light_preference ?x ?y east_west)
                    (and (not (light_color unknown)) (light_color green)))
             1/10 (when (light_preference ?x ?y east_west)
                    (and (not (light_color unknown)) (light_color red)))))
  )
  (:action look_at_light_west
    :parameters (?x - coord ?y - coord)
    :precondition (and (light_color unknown) (at ?x ?y) (heading west))
    :effect
      (and (probabilistic
             1/10 (when (light_preference ?x ?y north_south)
                    (and (not (light_color unknown)) (light_color green)))
             9/10 (when (light_preference ?x ?y north_south)
                    (and (not (light_color unknown))(light_color red))))
           (probabilistic
             9/10 (when (light_preference ?x ?y east_west)
                    (and (not (light_color unknown))(light_color green)))
             1/10 (when (light_preference ?x ?y east_west)
                    (and (not (light_color unknown))(light_color red)))))
  )
  (:action look_at_light_none
    :parameters (?x - coord ?y - coord)
    :precondition (and (light_color unknown) (at ?x ?y) (light_preference ?x ?y none))
    :effect
      (and (probabilistic
             1/2 (and (not (light_color unknown)) (light_color green))
             1/2 (and (not (light_color unknown)) (light_color red))))
  )
  (:action wait_on_light
    :parameters (?x - coord ?y - coord)
    :precondition (and (light_color red) (at ?x ?y))
    :effect (and (probabilistic 1/100 (not (alive)))
                 (probabilistic
                   1/2 (when (light_delay ?x ?y quick)
                         (and (not (light_color red)) (light_color green))))
                 (probabilistic
                   1/5 (when (light_delay ?x ?y normal)
                         (and (not (light_color red))(light_color green))))
                 (probabilistic
                   1/10 (when (light_delay ?x ?y slow)
                         (and (not (light_color red))(light_color green))))
            )
  )
  (:action proceed-right
    :parameters (?x ?y ?new-x ?new-y - coord ?old-heading ?new-heading - direction ?length - length)
    :precondition (and (light_color green) (at ?x ?y) (heading ?old-heading) (clockwise ?old-heading ?new-heading) (nextx ?x ?new-x ?new-heading) (nexty ?y ?new-y ?new-heading) (road-length ?x ?y ?new-x ?new-y ?length))
    :effect (and (not (light_color green))
                 (light_color unknown)
                 (probabilistic 1/50 (when (= ?length short) (not (alive))))
                 (probabilistic 1/20 (when (= ?length medium) (not (alive))))
                 (probabilistic 1/10 (when (= ?length long) (not (alive))))
                 (not (heading ?old-heading))
                 (heading ?new-heading)
                 (not (at ?x ?y))
                 (at ?new-x ?new-y))
  )
  (:action proceed-left
    :parameters (?x ?y ?new-x ?new-y - coord ?old-heading ?new-heading - direction ?length - length)
    :precondition (and (light_color green) (at ?x ?y) (heading ?old-heading) (clockwise ?new-heading ?old-heading) (nextx ?x ?new-x ?new-heading) (nexty ?y ?new-y ?new-heading) (road-length ?x ?y ?new-x ?new-y ?length))
    :effect (and (not (light_color green))
                 (light_color unknown)
                 (probabilistic 1/50 (when (= ?length short) (not (alive))))
                 (probabilistic 1/20 (when (= ?length medium) (not (alive))))
                 (probabilistic 1/10 (when (= ?length long) (not (alive))))
                 (not (heading ?old-heading))
                 (heading ?new-heading)
                 (not (at ?x ?y))
                 (at ?new-x ?new-y))
  )
  (:action proceed-straight
    :parameters (?x ?y ?new-x ?new-y - coord ?heading - direction ?length - length)
    :precondition (and (light_color green) (at ?x ?y) (heading ?heading) (nextx ?x ?new-x ?heading) (nexty ?y ?new-y ?heading) (road-length ?x ?y ?new-x ?new-y ?length))
    :effect (and (not (light_color green))
                 (light_color unknown)
                 (probabilistic 1/50 (when (= ?length short) (not (alive))))
                 (probabilistic 1/20 (when (= ?length medium) (not (alive))))
                 (probabilistic 1/10 (when (= ?length long) (not (alive))))
                 (not (at ?x ?y))
                 (at ?new-x ?new-y))
  )
)
