(define (domain prob_domain) 
 (:requirements :strips :probabilistic-effects :conditional-effects) 
 (:constants QW ZC ZN NW TZ TA FR VQ EV DA )
 (:predicates 
	 (KY ?X ?Y ) 
	 (GK ?X ?Y ) 
	 (VS ?X ) 
	 (YV ?X ) 
	 (RO ?X ?Y ) 
(clear)
(not-clear)
 )
(:action GQT
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (YV ?Z) 
		 (VS ?X) 
  )
 :effect (probabilistic 
		 100/100 (and (KY ?Y ?Y) )  
          )
 )
(:action DOI
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (KY ?Z ?X) 
		 (YV ?Y) 
  )
 :effect (probabilistic 
		 59/100 (and (VS ?Z) (KY ?X ?Z) )  
		 41/100 (and (GK ?X ?Y) )  
          )
 )
(:action HGG
 :parameters (?X )
 :precondition (and 
		 (GK ?X ?X) 
  )
 :effect (probabilistic 
		 17/100 (and (not (GK ?X ?X)) (VS ?X) (RO ?X ?X) )  
		 83/100 (and (not (GK ?X ?X)) )  
          )
 )
(:action FKF
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (GK ?X ?Y) 
  )
 :effect (probabilistic 
		 51/100 (and (KY ?Z ?Y) )  
		 17/100 (and (KY ?Z ?X) (GK ?Y ?Z) (not (GK ?X ?Y)) )  
		 32/100 (and (KY ?Y ?Y) (VS ?Z) (YV ?Z) )  
          )
 )
(:action LGW
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (KY ?Z ?X) 
  )
 :effect (probabilistic 
		 65/100 (and (YV ?Y) (KY ?Y ?X) )  
		 35/100 (and (RO ?Z ?X) (KY ?Z ?Y) (YV ?Y) )  
          )
 )
(:action reset1 
 :precondition (not-clear)
 :effect (and 
	     (forall (?x) (and 
      (not (KY ?x QW)) 
      (not (KY ?x ZC)) 
      (not (KY ?x ZN)) 
      (not (KY ?x NW)) 
      (not (KY ?x TZ)) 
      (not (KY ?x TA)) 
      (not (KY ?x FR)) 
      (not (KY ?x VQ)) 
      (not (KY ?x EV)) 
      (not (KY ?x DA)) 
      (not (GK ?x QW)) 
      (not (GK ?x ZC)) 
      (not (GK ?x ZN)) 
      (not (GK ?x NW)) 
      (not (GK ?x TZ)) 
      (not (GK ?x TA)) 
      (not (GK ?x FR)) 
      (not (GK ?x VQ)) 
      (not (GK ?x EV)) 
      (not (GK ?x DA)) 
      (not (VS ?x)) 
      (not (YV ?x)) 
      (not (RO ?x QW)) 
      (not (RO ?x ZC)) 
      (not (RO ?x ZN)) 
      (not (RO ?x NW)) 
      (not (RO ?x TZ)) 
      (not (RO ?x TA)) 
      (not (RO ?x FR)) 
      (not (RO ?x VQ)) 
      (not (RO ?x EV)) 
      (not (RO ?x DA)) 
))
(not (not-clear))
(clear)))

(:action reset2 
 :precondition (clear) 
 :effect (and (not-clear)
              (not (clear))
(KY TA ZC) 
(VS DA) 
(GK TZ QW) 
(KY TZ FR) 
(RO FR TZ) 
(VS ZC) 
(YV ZC) 
(YV QW) 
(YV ZN) 
(GK ZC QW) 
(RO ZC FR) 
(GK TZ VQ) 
(GK QW QW) 
(GK ZC ZC) 
(YV FR) 
(YV DA) 
(RO ZN NW) 
(GK VQ TZ) 
(GK VQ ZN) 
(RO FR TA) 
)))
(define (problem random-problem36) 
 (:domain prob_domain) 
 (:init 
(not-clear)
(KY TA ZC) (VS DA) (GK TZ QW) (KY TZ FR) (RO FR TZ) (VS ZC) (YV ZC) (YV QW) (YV ZN) (GK ZC QW) (RO ZC FR) (GK TZ VQ) (GK QW QW) (GK ZC ZC) (YV FR) (YV DA) (RO ZN NW) (GK VQ TZ) (GK VQ ZN) (RO FR TA)  
)
 (:goal (and 
(RO QW  QW ) 
)))
